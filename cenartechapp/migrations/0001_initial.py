# Generated by Django 5.1.1 on 2024-10-01 16:45

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdmittedStudents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_form', models.CharField(max_length=30)),
                ('term', models.CharField(max_length=30)),
                ('year', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Class_Form',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PassedStudents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_form', models.CharField(max_length=30)),
                ('term', models.CharField(max_length=30)),
                ('year', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(default='One', max_length=30)),
                ('hod_remarks', models.TextField(default='Very Good')),
                ('cutOfPoint', models.DecimalField(decimal_places=0, default=0, max_digits=10)),
                ('vacation_date', models.CharField(blank=True, max_length=30)),
                ('reopening_date', models.CharField(blank=True, max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='YearlyAdmittedStudents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=30)),
                ('number', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='YearlyPassedStudents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=30)),
                ('number', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('HOD', 'HOD'), ('STAFF', 'STAFF'), ('STUDENT', 'STUDENT')], default='HOD', max_length=50)),
                ('profile_pic', models.ImageField(default='blank.webp', upload_to='profile_pic')),
                ('middle_name', models.CharField(blank=True, max_length=200)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.TextField()),
                ('qualification', models.TextField()),
                ('experience', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('zipcode', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('stafftype', models.CharField(max_length=100)),
                ('religion', models.CharField(max_length=100)),
                ('phone', models.CharField(blank=True, max_length=100)),
                ('gender', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('class_managed', models.ManyToManyField(related_name='staff_managers', to='cenartechapp.class_form')),
                ('staff_name', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('subject_teacher_class', models.ManyToManyField(related_name='class_for_subject', to='cenartechapp.class_form')),
            ],
        ),
        migrations.AddField(
            model_name='class_form',
            name='managed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cenartechapp.staff'),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address1', models.TextField()),
                ('address2', models.TextField()),
                ('dob', models.CharField(max_length=100)),
                ('religion', models.CharField(max_length=100)),
                ('phone', models.CharField(blank=True, max_length=100)),
                ('gender', models.CharField(max_length=100)),
                ('father_name', models.CharField(blank=True, max_length=100)),
                ('father_number', models.CharField(blank=True, max_length=100)),
                ('father_email', models.CharField(blank=True, max_length=100)),
                ('mother_name', models.CharField(blank=True, max_length=100)),
                ('mother_email', models.CharField(blank=True, max_length=100)),
                ('mother_number', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('interest', models.CharField(blank=True, max_length=255)),
                ('conduct', models.TextField(default='Very Good')),
                ('remarks', models.TextField(default='Very Good')),
                ('year_stopped', models.CharField(blank=True, max_length=100)),
                ('term_stopped', models.CharField(blank=True, max_length=100)),
                ('attendance', models.CharField(max_length=100)),
                ('total_marks_term_one', models.DecimalField(decimal_places=1, max_digits=8, null=True)),
                ('total_marks_term_two', models.DecimalField(decimal_places=1, max_digits=8, null=True)),
                ('total_marks_term_three', models.DecimalField(decimal_places=1, max_digits=8, null=True)),
                ('overall_total_marks', models.DecimalField(decimal_places=0, max_digits=10, null=True)),
                ('class_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='cenartechapp.class_form')),
                ('promoted_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='moved', to='cenartechapp.class_form')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudentClasses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('classes', models.ManyToManyField(to='cenartechapp.class_form')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cenartechapp.student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=100)),
                ('exercise_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('homework_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('project_work_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('exam_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('total_score', models.DecimalField(decimal_places=2, default=0.0, editable=False, max_digits=8)),
                ('grade', models.CharField(blank=True, max_length=2)),
                ('profi', models.CharField(blank=True, max_length=2)),
                ('term', models.CharField(max_length=10)),
                ('previous_class', models.CharField(max_length=50)),
                ('year', models.CharField(max_length=10)),
                ('sum_class_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('total_class_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('exams_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sresults', to='cenartechapp.student')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('class_Form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cenartechapp.class_form')),
                ('managed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cenartechapp.staff')),
            ],
        ),
        migrations.AddField(
            model_name='student',
            name='subjects',
            field=models.ManyToManyField(blank=True, to='cenartechapp.subject'),
        ),
        migrations.AddField(
            model_name='staff',
            name='subject_teacher_subject',
            field=models.ManyToManyField(related_name='subject_teacher', to='cenartechapp.subject'),
        ),
    ]
